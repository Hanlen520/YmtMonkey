<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!--
    <property name="LOG_HOME" class="com.tools.LogbackCustomName" />
    -->
    <property name="LOG_HOME" value="${user.dir}/results/logs"/>
    <!--定义日志级别-->
    <!--TRACE < DEBUG < INFO < WARN < ERROR-->
    <property name="level" value="INFO"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出编码 -->
        <Encoding>UTF-8</Encoding>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            </pattern>
        </layout>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>false</append>
        <Encoding>UTF-8</Encoding>
        <file>${LOG_HOME}/default.log</file>

        <!--日志文件输出的文件名-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <FileNamePattern>${LOG_HOME}/default.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>3</MaxHistory>
        </rollingPolicy>-->

        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            </pattern>
        </layout>
        <!-- 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/default.%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>1</maxIndex>
        </rollingPolicy>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>1MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="appium" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>false</append>
        <Encoding>UTF-8</Encoding>
        <file>${LOG_HOME}/appium.log</file>

        <!--日志文件输出的文件名-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <fileNamePattern>${LOG_HOME}/appium.log.%d{yyyy-MM-dd}/.log.zip</fileNamePattern>
            <MaxHistory>3</MaxHistory>
        </rollingPolicy>-->

        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            </pattern>
        </layout>
        <!-- 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/appium.%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>1</maxIndex>
        </rollingPolicy>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>1MB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="adbLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>false</append>
        <file>${LOG_HOME}/adb.log</file>
        <Encoding>UTF-8</Encoding>    <!--日志文件输出的文件名-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

        <FileNamePattern>${LOG_HOME}/app.log.%d{yyyy-MM-dd}.log</FileNamePattern>
        <MaxHistory>3</MaxHistory>
    </rollingPolicy>-->
        <layout class="ch.qos.logback.classic.PatternLayout">
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
        </pattern>
        </layout>

        <!-- 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${LOG_HOME}/adb.%i.log</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>1</maxIndex>
        </rollingPolicy>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>1MB</MaxFileSize>
        </triggeringPolicy>
    </appender>


    <logger name="appium" level="${level}" additivity="false">

        <!--<appender-ref ref="STDOUT" />-->

        <appender-ref ref="appium"/>

    </logger>

    <logger name="adbLog" level="${level}" additivity="false">

        <!--<appender-ref ref="STDOUT" />-->

        <appender-ref ref="adbLog"/>

    </logger>


    <root level="${level}">

        <appender-ref ref="STDOUT"/>
        <!--<appender-ref ref="HTTP-POST-ERROR-APPENDER" />-->
        <appender-ref ref="FILE"/>

    </root>

</configuration>